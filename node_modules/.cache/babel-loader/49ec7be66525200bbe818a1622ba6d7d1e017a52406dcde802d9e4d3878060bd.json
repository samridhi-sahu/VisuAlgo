{"ast":null,"code":"export const bubbleSort = state => {\n  let arr = state.map(objArr => objArr);\n  let history = [];\n\n  // console.log(\"clicked\");\n\n  history.push(arr.map(a => {\n    return {\n      ...a\n    };\n  }));\n  for (let i = 0; i < arr.length; i++) {\n    // Last i elements are already in place  \n    for (let j = 0; j < arr.length - i - 1; j++) {\n      // Checking if the item at present iteration \n      // is greater than the next iteration\n      arr[j].color = 'white';\n      arr[j + 1].color = 'white';\n      history.push(arr.map(a => {\n        return {\n          ...a\n        };\n      }));\n      if (arr[j].value > arr[j + 1].value) {\n        arr[j].color = '#DC143C'; // red\n        arr[j + 1].color = '#DC143C';\n        history.push(arr.map(a => {\n          return {\n            ...a\n          };\n        }));\n        // If the condition is true then swap them\n        var temp = arr[j];\n        arr[j] = arr[j + 1];\n        arr[j + 1] = temp;\n      } else {\n        arr[j].color = '#32CD32'; //green\n        arr[j + 1].color = '#32CD32';\n        history.push(arr.map(a => {\n          return {\n            ...a\n          };\n        }));\n      }\n      arr[j].color = '#293451'; //blue\n      arr[j + 1].color = '#293451';\n      history.push(arr.map(a => {\n        return {\n          ...a\n        };\n      }));\n    }\n  }\n\n  // print history arra\n  // console.log(history);\n\n  /*  Evert thing done just show 2nd last step as green and last step as default color  */\n\n  // push sorted aray with all green color\n  history.push(arr.map(a => {\n    return {\n      ...a,\n      color: \"#32CD32\"\n    };\n  }));\n  // push with default color\n  history.push(arr.map(a => {\n    return {\n      ...a\n    };\n  }));\n  return history;\n};\n\n//********* */ older  code  *********\n\n// setTimeout(()=>{\n\n//    for(let j = 0; j < ( state.length - i -1 ); j++){\n\n//     console.log(i,j);\n//     if(state[j].value > state[j+1].value){\n\n//       setTimeout(()=>{   \n\n//         setstate((arrObj)=>{\n//           arrObj[j].compare =true;\n//           arrObj[j+1].compare = true;\n//           return [...arrObj]\n//         });\n\n//       },100);\n\n//       setTimeout(()=>{\n\n//         setstate((arrObj)=>{\n//            arrObj[j].compare =false;\n//            arrObj[j+1].compare = false;\n//            return [...arrObj]\n\n//         } );\n\n//       },300);\n\n//       setTimeout(()=>{\n\n//        setstate((arrObj) => {\n\n//         let temp = arrObj[j];\n//         arrObj[j] = arrObj[j+1];\n//         arrObj[j+1] = temp;\n//         return [...arrObj]\n//        });\n\n//       },400); \n\n//     }\n\n//    }\n//  },interval)\n//   interval+=1000;\n\n//   if(i+1< state.length) {\n//     setstate((state) => state)\n//     outer(i+1);\n//   }","map":{"version":3,"names":["bubbleSort","state","arr","map","objArr","history","push","a","i","length","j","color","value","temp"],"sources":["C:/Users/SAMRIDHI SAHU/AppData/Roaming/nvm/v18.16.0/algorithm-visualizer/src/Algorithms/bubble-sort.js"],"sourcesContent":["\r\nexport const  bubbleSort = ( state) => {  \r\n    let arr = state.map((objArr)=> objArr );\r\n    let history =[];\r\n  \r\n    // console.log(\"clicked\");\r\n  \r\n    history.push(\r\n         arr.map((a)=>{\r\n            return {...a};\r\n         } )\r\n    )\r\n  \r\n  for(let i = 0; i < arr.length; i++){\r\n       \r\n     // Last i elements are already in place  \r\n     for(let j = 0; j < ( arr.length - i -1 ); j++){\r\n         \r\n       // Checking if the item at present iteration \r\n       // is greater than the next iteration\r\n       arr[j].color ='white';\r\n       arr[j+1].color ='white';\r\n       \r\n       history.push(\r\n         arr.map((a)=>{\r\n            return {...a};\r\n         } )\r\n       )\r\n  \r\n       if(arr[j].value > arr[j+1].value){\r\n  \r\n         arr[j].color ='#DC143C';    // red\r\n         arr[j+1].color ='#DC143C';\r\n  \r\n        history.push(\r\n         arr.map((a)=>{\r\n            return {...a};\r\n         } )\r\n        )\r\n         // If the condition is true then swap them\r\n         var temp = arr[j]\r\n         arr[j] = arr[j + 1]\r\n         arr[j+1] = temp\r\n  \r\n        \r\n  \r\n  \r\n       }\r\n       else{\r\n          arr[j].color ='#32CD32';   //green\r\n          arr[j+1].color ='#32CD32';\r\n  \r\n          history.push(\r\n          arr.map((a)=>{\r\n            return {...a};\r\n          } )\r\n         );\r\n       }\r\n  \r\n      arr[j].color ='#293451';  //blue\r\n      arr[j+1].color ='#293451';\r\n  \r\n        history.push(\r\n         arr.map((a)=>{\r\n            return {...a};\r\n         } )\r\n        );\r\n  \r\n     }\r\n   }\r\n  \r\n  // print history arra\r\n  // console.log(history);\r\n  \r\n  \r\n   \r\n  /*  Evert thing done just show 2nd last step as green and last step as default color  */\r\n  \r\n  \r\n      // push sorted aray with all green color\r\n       history.push(\r\n         arr.map((a)=>{\r\n            return {...a, color : \"#32CD32\"};\r\n         } )\r\n    )\r\n     // push with default color\r\n     history.push(\r\n         arr.map((a)=>{\r\n            return {...a};\r\n         } )\r\n    )\r\n  return history;\r\n  }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  //********* */ older  code  *********\r\n  \r\n  // setTimeout(()=>{\r\n  \r\n  //    for(let j = 0; j < ( state.length - i -1 ); j++){\r\n         \r\n  //     console.log(i,j);\r\n  //     if(state[j].value > state[j+1].value){\r\n  \r\n  //       setTimeout(()=>{   \r\n  \r\n  //         setstate((arrObj)=>{\r\n  //           arrObj[j].compare =true;\r\n  //           arrObj[j+1].compare = true;\r\n  //           return [...arrObj]\r\n  //         });\r\n  \r\n  //       },100);\r\n  \r\n  \r\n        \r\n  //       setTimeout(()=>{\r\n         \r\n  //         setstate((arrObj)=>{\r\n  //            arrObj[j].compare =false;\r\n  //            arrObj[j+1].compare = false;\r\n  //            return [...arrObj]\r\n          \r\n  //         } );\r\n      \r\n  //       },300);\r\n  \r\n  \r\n  //       setTimeout(()=>{\r\n        \r\n  //        setstate((arrObj) => {\r\n         \r\n  //         let temp = arrObj[j];\r\n  //         arrObj[j] = arrObj[j+1];\r\n  //         arrObj[j+1] = temp;\r\n  //         return [...arrObj]\r\n  //        });\r\n  \r\n  //       },400); \r\n        \r\n  //     }\r\n  \r\n  //    }\r\n  //  },interval)\r\n  //   interval+=1000;\r\n  \r\n  //   if(i+1< state.length) {\r\n  //     setstate((state) => state)\r\n  //     outer(i+1);\r\n  //   }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}